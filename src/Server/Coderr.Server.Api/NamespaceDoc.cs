using System.Runtime.CompilerServices;

namespace codeRR.Server.Api
{
    // This file is Generated by the tool MarkdownToNamespaceDoc. ReadMe.md is the master.

    /// <summary>
    ///     API
    /// </summary>
    /// <remarks>
    ///     <para>The API is based on Command/Queries and events. </para>
    ///     <para>
    ///         Commands can be seen as the write model. All operations is done with the
    ///         help of commands. A command is not an atomic unit, but do in most cases represent an use case.
    ///     </para>
    ///     <para>
    ///         Queries are the read model in the application. They are used to fetch information. Queries are idempotent and
    ///         may not change
    ///         application state.
    ///     </para>
    ///     <para>
    ///         Events are used to allow different parts of the application to talk. The publisher are not aware of if there
    ///         are any
    ///         subscribers or how many there are. The subscriber have no knowledge about who published the event.
    ///     </para>
    ///     <h1 id="Implementations">Implementations</h1>
    ///     <para>
    ///         There is a tool in the &quot;Tool&quot; root folder which are used to generate Typescript classes from these
    ///         APIs. The <c>.ts</c> files can be
    ///         invoked using Ajax directly from the web.
    ///     </para>
    ///     <para>
    ///         You can also invoke the DTOs directly from your application using a HTTP client. Serialize the DTO as JSON and
    ///         then include
    ///         <c>X-Cqs-Object-Type</c> as a HTTP header. It should contain the assembly qualified type name of the DTO.
    ///     </para>
    ///     <para>Basic authentication is used. Thus we recommend that you run the site using SSL.</para>
    /// </remarks>
    [CompilerGenerated]
    internal class NamespaceDoc
    {
    }
}